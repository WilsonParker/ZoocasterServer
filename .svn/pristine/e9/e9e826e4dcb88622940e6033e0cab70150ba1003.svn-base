package com.graction.lumi.controller;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.graction.lumi.data.DataStorage;
import com.graction.lumi.model.xml.WeatherData;
import com.graction.lumi.util.log.HLogger;
import com.graction.lumi.util.log.HLogger.LogType;
import com.graction.lumi.util.parser.XmlParserForJAXB;

/**
 * Handles requests for the application home page.
 */
@Controller
public class HomeController {
	
	private static final HLogger logger = HLogger.getInstance(HomeController.class);
	
	private void initParseData() {
		DataStorage.weatherData = XmlParserForJAXB.getInstance().parseXmlToObject(WeatherData.class, DataStorage.File.FILE_NAME_XML_WEATHERDATA);
	}
	
	private void init(Model model, HttpServletRequest request, HttpServletResponse response) {
		try {
			response.setCharacterEncoding("UTF-8");
			response.setContentType("text/html;charset=UTF-8");
			response.setHeader("Cache-Control", "no-cache");
			response.setHeader("Pragma", "no-cache");
			response.setDateHeader("Expires", 0);
//			model.addAttribute(DataCollector.ATTR_REQUEST, request);
//			model.addAttribute(DataCollector.ATTR_RESPONSE, response);
//			model.addAttribute(DataCollector.ATTR_MAPPER, sqlSession.getMapper(DaoMapper.class));
//			InitializeManager.initialize(model, request, response);
		} catch (Exception e) {
			logger.log(LogType.ERROR, "init(Model model, HttpServletRequest request, HttpServletResponse response)","init error",e);
		}
	}
	
	@RequestMapping(value = DataStorage.Mapping.MAPPING_INDEX, method = RequestMethod.GET)
	public String index(Model model, HttpServletRequest request, HttpServletResponse response) {
		
		/*Date date = new Date();
		String formattedDate = dateFormat.format(date);
		model.addAttribute("serverTime", formattedDate );*/
		init(model, request, response);
		initParseData();
		return DataStorage.Path.PATH_VIEW_FRAME;
	}

	@RequestMapping(value = DataStorage.Mapping.MAPPING_HOME, method = RequestMethod.GET)
	public String home(Locale locale, Model model) {
		return DataStorage.Path.PATH_VIEW_HOME;
	}
	
	@RequestMapping(value = DataStorage.Mapping.MAPPING_ATTRIBUTE)
	public String attributePage(Model model, HttpServletRequest request) {
		return DataStorage.Path.PATH_VIEW_ATTRIBUTE;
	}
	
}
